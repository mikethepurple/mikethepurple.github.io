{"version":3,"sources":["webpack:///./src/components/portfolioblock.js","webpack:///./src/pages/portfolio.js"],"names":["App","link","headingText","mainText","className","data","console","log","useState","type","setType","headingFirst","size","speed","onClick","href","aria-label","role","id","allMarkdownRemark","edges","map","node","frontmatter","tag","includes","key","fields","slug","title","summary","query"],"mappings":"kLAgBeA,MAXf,YAA8C,EAA/BC,KAAgC,IAA1BC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,SAChC,OACE,mBAAMC,UAAU,kBACd,uBACE,iBAAGA,UAAU,eAAeF,GAC5B,iBAAGE,UAAU,YAAYD,M,8DCElB,sBAAe,IAAZE,EAAW,EAAXA,KAChBC,QAAQC,IAAIF,GADe,MAEHG,mBAAS,OAA1BC,EAFoB,KAEdC,EAFc,KAG3B,OACE,uBACE,YAAC,IAAD,MACA,mBAAKN,UAAU,wBACb,YAAC,IAAD,CAASO,aAAa,UAAUC,KAAK,MAAMC,MAAM,QAEnD,mBAAKT,UAAU,gBACf,mBAAKA,UAAU,kBACb,iBAAGU,QAAS,kBAAMJ,EAAQ,eAAeK,KAAK,SAC5C,oBAAMC,aAAW,eADnB,cAIA,iBAAGF,QAAS,kBAAMJ,EAAQ,OAAOK,KAAK,SACpC,oBAAME,KAAK,MAAMD,aAAW,OAD9B,MAIA,iBAAGF,QAAS,kBAAMJ,EAAQ,YAAYK,KAAK,SACzC,oBAAME,KAAK,MAAMD,aAAW,YAD9B,WAIA,iBAAGF,QAAS,kBAAMJ,EAAQ,aAAaK,KAAK,SAC1C,oBAAME,KAAK,MAAMD,aAAW,aAD9B,YAIA,iBAAGF,QAAS,kBAAMJ,EAAQ,iBAAiBK,KAAK,SAC9C,oBAAME,KAAK,MAAMD,aAAW,iBAD9B,gBAIA,iBAAGF,QAAS,kBAAMJ,EAAQ,eAAeK,KAAK,SAC5C,oBAAME,KAAK,MAAMD,aAAW,eAD9B,cAIA,iBAAGF,QAAS,kBAAMJ,EAAQ,YAAYQ,GAAG,QACvC,oBAAMD,KAAK,MAAMD,aAAW,YAD9B,WAKA,mBAAKE,GAAG,SAASd,UAAU,YAE7B,mBAAKA,UAAU,gBAAgBc,GAAG,QAC/Bb,EAAKc,kBAAkBC,MAAMC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACnC,GAAIA,EAAKC,YAAYC,IAAIC,SAAShB,GAChC,OACE,YAAC,EAAD,CACEiB,IAAKJ,EAAKJ,GACVjB,KAAMqB,EAAKK,OAAOC,KAClB1B,YAAaoB,EAAKC,YAAYM,MAC9B1B,SAAUmB,EAAKC,YAAYO,aAKnC,mBAAK1B,UAAU,mBAzDvB,IA+Da2B,EAAK","file":"component---src-pages-portfolio-js-cb3e29c506799c480e50.js","sourcesContent":["import React from \"react\"\n// import { css } from \"@emotion/core\"\nimport { Link } from \"gatsby\"\nimport { Burger, Menu } from \".\"\n\nfunction App({ link, headingText, mainText }) {\n  return (\n    <div  className=\"portfolioBlock\">\n      <div>\n        <p className=\"gridHeading\">{headingText}</p>\n        <p className=\"gridText\">{mainText}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\n// import { css } from \"@emotion/core\"\n// import { rhythm } from \"../utils/typography\"\nimport PortfolioBlock from \"../components/portfolioblock\"\nimport Topmenu from \"../components/topmenu\"\nimport { useState } from \"react\"\nimport Heading from \"../components/headings\"\n\nvar type = \"EVERYTHING\"\n\nexport default ({ data }) => {\n  console.log(data)\n  const [type, setType] = useState(\"LOL\")\n  return (\n    <div>\n      <Topmenu />\n      <div className=\"scrollRibbon heading\">\n        <Heading headingFirst=\"SCROLL \" size=\"3vh\" speed=\"30\" />\n      </div>\n      <div className=\"scrollCheat\"></div>\n      <div className=\"portfolioLinks\">\n        <a onClick={() => setType(\"EVERYTHING\")} href=\"#copy\">\n          <span aria-label=\"EVERYTHING\"></span>\n          EVERYTHING\n        </a>\n        <a onClick={() => setType(\"UX\")} href=\"#copy\">\n          <span role=\"img\" aria-label=\"UX\"></span>\n          UX\n        </a>\n        <a onClick={() => setType(\"PRODUCT\")} href=\"#copy\">\n          <span role=\"img\" aria-label=\"PRODUCT\"></span>\n          PRODUCT\n        </a>\n        <a onClick={() => setType(\"RESEARCH\")} href=\"#copy\">\n          <span role=\"img\" aria-label=\"RESEARCH\"></span>\n          RESEARCH\n        </a>\n        <a onClick={() => setType(\"FACILITATION\")} href=\"#copy\">\n          <span role=\"img\" aria-label=\"FACILITATION\"></span>\n          FACILITATION\n        </a>\n        <a onClick={() => setType(\"MANAGEMENT\")} href=\"#copy\">\n          <span role=\"img\" aria-label=\"MANAGEMENT\"></span>\n          MANAGEMENT\n        </a>\n        <a onClick={() => setType(\"NOTHING\")} id=\"copy\">\n          <span role=\"img\" aria-label=\"NOTHING\"></span>\n          NOTHING\n        </a>\n\n        <div id=\"anchor\" className=\"anchor\" />\n      </div>\n      <div className=\"portfolioGrid\" id=\"grid\">\n        {data.allMarkdownRemark.edges.map(({ node }) => {\n          if (node.frontmatter.tag.includes(type)) {\n            return (\n              <PortfolioBlock\n                key={node.id}\n                link={node.fields.slug}\n                headingText={node.frontmatter.title}\n                mainText={node.frontmatter.summary}\n              />\n            )\n          }\n        })}\n        <div className=\"scrollCheat\"></div>\n      </div>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            tag\n            summary\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}